List<String> topKFrequent(String[] words, int k) {
    Map<String, Integer> cnt = new HashMap<>();
    for (String w : words) cnt.put(w, cnt.getOrDefault(w, 0) + 1);
    PriorityQueue<String> pq = new PriorityQueue<>(
        (a, b) -> cnt.get(a).equals(cnt.get(b)) ? b.compareTo(a) : cnt.get(a) - cnt.get(b)
    );
    for (String w : cnt.keySet()) {
        pq.offer(w);
        if (pq.size() > k) pq.poll();
    }
    List<String> res = new ArrayList<>();
    while (!pq.isEmpty()) res.add(pq.poll());
    Collections.reverse(res);
    return res;
}
